include_directories(SYSTEM ${gtest_SOURCE_DIR} ${gtest_SOURCE_DIR}/include)
include_directories(SYSTEM ${gmock_SOURCE_DIR} ${gmock_SOURCE_DIR}/include)
include_directories(${PROJECT_SOURCE_DIR}/test/include)
if (USE_RPC)
  include_directories(SYSTEM ${CMAKE_BINARY_DIR}/src)
endif ()

file(GLOB_RECURSE TEST_SRCS ${PROJECT_SOURCE_DIR}/test/test_*.cpp)

if (USE_CAFFE)
  include_directories(SYSTEM ${Caffe_INCLUDE_DIRS})
else ()
  list(REMOVE_ITEM TEST_SRCS ${PROJECT_SOURCE_DIR}/test/test_nne_caffe.cpp)
endif ()

if (USE_ZMQ)
  include_directories(SYSTEM ${ZMQ_INCLUDE_DIRS})
else ()
  list(REMOVE_ITEM TEST_SRCS ${PROJECT_SOURCE_DIR}/test/test_stream_publisher.cpp)
endif ()

add_library(streamer_gtest_main streamer_gtest_main.cpp)
target_link_libraries(streamer_gtest_main streamer gtest)
ADD_BUILD_REQS(streamer_gtest_main)

add_custom_target(tests)
set(TEST_CONFIG_DIR ${PROJECT_BINARY_DIR}/test/config)
foreach (f ${TEST_SRCS})
  get_filename_component(basename ${f} NAME_WE)
  add_executable(${basename} EXCLUDE_FROM_ALL ${f})
  target_link_libraries(${basename} streamer gtest streamer_gtest_main gmock gmock_main)
  add_test(${basename} ${basename} ${TEST_CONFIG_DIR})
  add_dependencies(tests ${basename})
  ADD_BUILD_REQS(${basename})
endforeach ()

file(GLOB TEST_CONFIG_FILES ${PROJECT_SOURCE_DIR}/test/config/*.toml)
file(GLOB TEST_DATA_FILES ${PROJECT_SOURCE_DIR}/test/data/*)
foreach (f ${TEST_CONFIG_FILES})
  file(COPY ${f} DESTINATION config)
endforeach ()
foreach (f ${TEST_DATA_FILES})
  file(COPY ${f} DESTINATION data)
endforeach ()
