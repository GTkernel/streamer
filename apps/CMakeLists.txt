find_package(Threads REQUIRED)
find_package(Boost COMPONENTS regex system thread date_time REQUIRED)

include_directories(SYSTEM ${ZMQ_INCLUDE_DIRS})
if (USE_RPC)
  include_directories(SYSTEM ${CMAKE_BINARY_DIR}/src)
endif ()

# Macro to get sub directories
MACRO(SUBDIRLIST result curdir)
  FILE(GLOB children RELATIVE ${curdir} ${curdir}/*)
  SET(dirlist "")
  FOREACH (child ${children})
    IF (IS_DIRECTORY ${curdir}/${child})
      LIST(APPEND dirlist ${child})
    ENDIF ()
  ENDFOREACH ()
  SET(${result} ${dirlist})
ENDMACRO()

MACRO(BUILD_APP app_dir)
  FILE(GLOB app_srcs ${app_dir}/*.cpp ${app_dir}/*.h ${app_dir}/*.c)
  get_filename_component(app_name ${app_dir} NAME_WE)
  add_executable(${app_name} EXCLUDE_FROM_ALL ${app_srcs})
  if (JEMALLOC_FOUND)
    target_link_libraries(${app_name} ${JAMALLOC_LIBRARIES})
  endif ()
  target_link_libraries(${app_name} streamer ${Boost_PROGRAM_OPTIONS_LIBRARY})
ENDMACRO()

set(APPS_ROOT ${PROJECT_SOURCE_DIR}/apps/)
SUBDIRLIST(APP_DIRS ${APPS_ROOT})

add_custom_target(apps)

foreach (app_dir ${APP_DIRS})
  if (EXISTS ${PROJECT_SOURCE_DIR}/apps/${app_dir}/CMakeLists.txt)
    add_subdirectory(${app_dir})
  else ()
    BUILD_APP(${app_dir})
    get_filename_component(app_name ${app_dir} NAME_WE)
    add_dependencies(apps ${app_name})
  endif ()
endforeach ()

target_link_libraries(server ${Boost_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
